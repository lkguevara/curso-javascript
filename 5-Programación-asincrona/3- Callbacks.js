// * #1. DefiniciÃ³n

/*
    Una callback (llamada de vuelta), es una funciÃ³n que se ejecutarÃ¡ despuÃ©s de que otra lo haga. 
    Es un mecanismo para asegurar que cierto cÃ³digo no se ejecute hasta que otro haya terminado.
    Al ser JavaScript un lenguaje orientado a eventos, las callbacks son una buena tÃ©cnica para controlar la asÃ­ncronÃ­a.
*/

// * #2. Ejemplos

    // Ejemplo 1   
        
        function cuadradoCallback(value,callback) {
            setTimeout(() => {
                callback(value, value*value);
            }, 0 || Math.random()*100);
        }

        cuadradoCallback(0, (value, result) => {
            console.log("Inicia Callback");
            console.log(`Callback: ${value}, ${result}`);
            cuadradoCallback(1, (value, result) => {
              console.log(`Callback: ${value}, ${result}`);
              cuadradoCallback(2, (value, result) => {
                console.log(`Callback: ${value}, ${result}`);
                cuadradoCallback(3, (value, result) => {
                  console.log(`Callback: ${value}, ${result}`);
                  cuadradoCallback(4, (value, result) => {
                    console.log(`Callback: ${value}, ${result}`);
                    cuadradoCallback(5, (value, result) => {
                      console.log(`Callback: ${value}, ${result}`);
                      console.log("Fin Callback");
                      console.log("Callback Hell !!!!!ðŸ˜ˆðŸ¤˜");
                      console.log("http://callbackhell.com/");
                    });
                  });
                });
              });
            });
          });

    // Ejemplo 2

        function mensaje() {
            console.log("mensaje 1");
            setTimeout(() => {
                mensaje2()
            }, 3000);
        }
        function mensaje2() {
            console.log("mensaje 2")
        }

        mensaje();
        
    // Ejemplo 3

        function mensaje() {
            console.log("mensaje 1");
            setTimeout(() => {
                mensaje2()
            }, 3000);
        }
        function mensaje2() {
            console.log("mensaje 2")
        }

        mensaje();
     


